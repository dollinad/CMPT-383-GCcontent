{"ast":null,"code":"var _jsxFileName = \"/Users/dollina/Desktop/Project/bioinfojs/src/GCInput.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { API_URL } from \"./constants/index.js\";\nimport { Row, Col, Container } from 'react-bootstrap';\nimport GCOutput from \"./GCOutput\";\n\nclass GCInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      axios.post(API_URL, this.state).then(response => {\n        console.log(response);\n        alert(\"Submitted\");\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \" Please enter your input DNA sequence (an array of A, T, G and C)\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"value\",\n      style: {\n        width: '350px',\n        height: '250px'\n      },\n      placeholder: \"DNA sequence comprising of A, T, G and C\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      rows: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 28\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(GCOutput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default GCInput;","map":{"version":3,"sources":["/Users/dollina/Desktop/Project/bioinfojs/src/GCInput.js"],"names":["React","Component","axios","API_URL","Row","Col","Container","GCOutput","GCInput","constructor","props","handleSubmit","e","preventDefault","console","log","state","post","then","response","alert","catch","error","handleChange","setState","value","target","bind","render","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,iBAApC;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,OAAN,SAAsBR,KAAK,CAACC,SAA5B,CAAsC;AAClCQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAWlBC,YAXkB,GAWHC,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAd,MAAAA,KAAK,CAACe,IAAN,CAAWd,OAAX,EAAoB,KAAKa,KAAzB,EACKE,IADL,CACUC,QAAQ,IAAI;AACdL,QAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACAC,QAAAA,KAAK,CAAC,WAAD,CAAL;AACH,OAJL,EAKKC,KALL,CAKWC,KAAK,IAAI;AACZR,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,OAPL;AASH,KAvBiB;;AAAA,SA0BlBC,YA1BkB,GA0BHX,CAAC,IAAI;AAChB,WAAKY,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEb,CAAC,CAACc,MAAF,CAASD;AAAlB,OAAd;AACH,KA5BiB;;AAEd,SAAKT,KAAL,GAAa;AACTS,MAAAA,KAAK,EAAE;AADE,KAAb;AAIA,SAAKF,YAAL,GAAoB,KAAKA,YAAL,CAAkBI,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKhB,YAAL,GAAoB,KAAKA,YAAL,CAAkBgB,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAsBDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EADJ,eAEI;AAAM,MAAA,QAAQ,EAAE,KAAKjB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE;AAACkB,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,MAAM,EAAC;AAAvB,OAHX;AAII,MAAA,WAAW,EAAC,0CAJhB;AAKI,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWS,KALtB;AAMI,MAAA,QAAQ,EAAE,KAAKF,YANnB;AAOI,MAAA,IAAI,EAAC,GAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAQ,MAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,CAVJ,CADJ,CAFJ,eAgBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,CADJ;AAoBH;;AApDiC;;AAsDtC,eAAef,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from \"axios\"\nimport { API_URL } from \"./constants/index.js\"\nimport { Row, Col, Container } from 'react-bootstrap';\n\nimport GCOutput from \"./GCOutput\"\n\nclass GCInput extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            value: '',\n        };\n        \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        console.log(this.state)\n        axios.post(API_URL, this.state)\n            .then(response => {\n                console.log(response)\n                alert(\"Submitted\")\n            })\n            .catch(error => {\n                console.log(error)\n            })\n\n    }\n\n\n    handleChange = e => {\n        this.setState({ value: e.target.value });\n    }\n\n    render() {\n        return (\n            <div>\n                <p> Please enter your input DNA sequence (an array of A, T, G and C)</p>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <textarea\n                            type=\"text\" \n                            name=\"value\"\n                            style={{width:'350px', height:'250px'}}\n                            placeholder=\"DNA sequence comprising of A, T, G and C\"\n                            value={this.state.value}\n                            onChange={this.handleChange} \n                            rows=\"3\"\n                        />\n                        <p><button type =\"submit\">Submit</button></p>\n                    </div>\n                </form>\n                <GCOutput/>\n            </div>\n        )\n    }\n}\nexport default GCInput"]},"metadata":{},"sourceType":"module"}