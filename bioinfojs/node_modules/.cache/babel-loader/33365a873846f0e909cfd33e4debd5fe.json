{"ast":null,"code":"function gcd(x, y) {\n  while (y) {\n    var temp = x;\n    x = y;\n    y = temp % y;\n  }\n\n  return x;\n}\n\nfunction lcm(x, y) {\n  return x * y / gcd(x, y);\n}\n\nfunction isInt(thing) {\n  return typeof thing == \"number\" && thing % 1 === 0;\n}\n\nfunction round(decimal, places) {\n  places = typeof places === \"undefined\" ? 2 : places;\n  var x = Math.pow(10, places);\n  return Math.round(parseFloat(decimal) * x) / x;\n}\n\nvar GREEK_LETTERS = ['alpha', 'beta', 'gamma', 'Gamma', 'delta', 'Delta', 'epsilon', 'varepsilon', 'zeta', 'eta', 'theta', 'vartheta', 'Theta', 'iota', 'kappa', 'lambda', 'Lambda', 'mu', 'nu', 'xi', 'Xi', 'pi', 'Pi', 'rho', 'varrho', 'sigma', 'Sigma', 'tau', 'upsilon', 'Upsilon', 'phi', 'varphi', 'Phi', 'chi', 'psi', 'Psi', 'omega', 'Omega'];\nexports.gcd = gcd;\nexports.lcm = lcm;\nexports.isInt = isInt;\nexports.round = round;\nexports.GREEK_LETTERS = GREEK_LETTERS;","map":{"version":3,"sources":["/Users/dollina/Desktop/Project/bioinfojs/node_modules/algebra.js/src/helper.js"],"names":["gcd","x","y","temp","lcm","isInt","thing","round","decimal","places","Math","pow","parseFloat","GREEK_LETTERS","exports"],"mappings":"AAAA,SAASA,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACf,SAAOA,CAAP,EAAU;AACN,QAAIC,IAAI,GAAGF,CAAX;AACAA,IAAAA,CAAC,GAAGC,CAAJ;AACAA,IAAAA,CAAC,GAAGC,IAAI,GAAGD,CAAX;AACH;;AAED,SAAOD,CAAP;AACH;;AAED,SAASG,GAAT,CAAaH,CAAb,EAAgBC,CAAhB,EAAmB;AACf,SAAQD,CAAC,GAAGC,CAAL,GAAUF,GAAG,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH;;AAED,SAASG,KAAT,CAAeC,KAAf,EAAsB;AAClB,SAAQ,OAAOA,KAAP,IAAgB,QAAjB,IAA+BA,KAAK,GAAG,CAAR,KAAc,CAApD;AACH;;AAED,SAASC,KAAT,CAAeC,OAAf,EAAwBC,MAAxB,EAAgC;AAC5BA,EAAAA,MAAM,GAAI,OAAOA,MAAP,KAAmB,WAAnB,GAAiC,CAAjC,GAAqCA,MAA/C;AACA,MAAIR,CAAC,GAAGS,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaF,MAAb,CAAR;AACA,SAAOC,IAAI,CAACH,KAAL,CAAWK,UAAU,CAACJ,OAAD,CAAV,GAAsBP,CAAjC,IAAsCA,CAA7C;AACH;;AAED,IAAIY,aAAa,GAAG,CAChB,OADgB,EAEhB,MAFgB,EAGhB,OAHgB,EAIhB,OAJgB,EAKhB,OALgB,EAMhB,OANgB,EAOhB,SAPgB,EAQhB,YARgB,EAShB,MATgB,EAUhB,KAVgB,EAWhB,OAXgB,EAYhB,UAZgB,EAahB,OAbgB,EAchB,MAdgB,EAehB,OAfgB,EAgBhB,QAhBgB,EAiBhB,QAjBgB,EAkBhB,IAlBgB,EAmBhB,IAnBgB,EAoBhB,IApBgB,EAqBhB,IArBgB,EAsBhB,IAtBgB,EAuBhB,IAvBgB,EAwBhB,KAxBgB,EAyBhB,QAzBgB,EA0BhB,OA1BgB,EA2BhB,OA3BgB,EA4BhB,KA5BgB,EA6BhB,SA7BgB,EA8BhB,SA9BgB,EA+BhB,KA/BgB,EAgChB,QAhCgB,EAiChB,KAjCgB,EAkChB,KAlCgB,EAmChB,KAnCgB,EAoChB,KApCgB,EAqChB,OArCgB,EAsChB,OAtCgB,CAApB;AAyCAC,OAAO,CAACd,GAAR,GAAcA,GAAd;AACAc,OAAO,CAACV,GAAR,GAAcA,GAAd;AACAU,OAAO,CAACT,KAAR,GAAgBA,KAAhB;AACAS,OAAO,CAACP,KAAR,GAAgBA,KAAhB;AACAO,OAAO,CAACD,aAAR,GAAwBA,aAAxB","sourcesContent":["function gcd(x, y) {\n    while (y) {\n        var temp = x;\n        x = y;\n        y = temp % y;\n    }\n\n    return x;\n}\n\nfunction lcm(x, y) {\n    return (x * y) / gcd(x, y);\n}\n\nfunction isInt(thing) {\n    return (typeof thing == \"number\") && (thing % 1 === 0);\n}\n\nfunction round(decimal, places) {\n    places = (typeof(places) === \"undefined\" ? 2 : places);\n    var x = Math.pow(10, places);\n    return Math.round(parseFloat(decimal) * x) / x;\n}\n\nvar GREEK_LETTERS = [\n    'alpha',\n    'beta',\n    'gamma',\n    'Gamma',\n    'delta',\n    'Delta',\n    'epsilon',\n    'varepsilon',\n    'zeta',\n    'eta',\n    'theta',\n    'vartheta',\n    'Theta',\n    'iota',\n    'kappa',\n    'lambda',\n    'Lambda',\n    'mu',\n    'nu',\n    'xi',\n    'Xi',\n    'pi',\n    'Pi',\n    'rho',\n    'varrho',\n    'sigma',\n    'Sigma',\n    'tau',\n    'upsilon',\n    'Upsilon',\n    'phi',\n    'varphi',\n    'Phi',\n    'chi',\n    'psi',\n    'Psi',\n    'omega',\n    'Omega'\n];\n\nexports.gcd = gcd;\nexports.lcm = lcm;\nexports.isInt = isInt;\nexports.round = round;\nexports.GREEK_LETTERS = GREEK_LETTERS;"]},"metadata":{},"sourceType":"script"}