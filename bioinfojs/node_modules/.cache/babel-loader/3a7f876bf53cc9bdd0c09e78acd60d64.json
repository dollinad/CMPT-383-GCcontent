{"ast":null,"code":"var _jsxFileName = \"/Users/dollina/Desktop/Project/bioinfojs/src/GCInput.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { API_URL } from \"./constants/index.js\";\nimport { Row, Col, Container } from 'react-bootstrap';\nimport GCOutput from \"./GCOutput\";\n\nclass GCInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      axios.get(API_URL).then(res => this.setState({\n        sequences: res.data\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      axios.post(API_URL, this.state).then(response => {\n        console.log(response);\n        alert(\"Submitted\");\n        this.refreshList();\n      }).catch(error => {\n        console.log(error);\n      }); //axios.get(API_URL)\n      //    .then((response) =>  {\n      //       console.log(response.data)\n      //    })\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      value: '',\n      sequences: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getOutput() {\n    axios.get(API_URL).then(response => {\n      console.log(response.data[response.data.length - 1]);\n    });\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \" Please enter your input DNA sequence (an array of A, T, G and C)\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"value\",\n      style: {\n        width: '350px',\n        height: '250px'\n      },\n      placeholder: \"DNA sequence comprising of A, T, G and C\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      rows: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 28\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default GCInput;","map":{"version":3,"sources":["/Users/dollina/Desktop/Project/bioinfojs/src/GCInput.js"],"names":["React","Component","axios","API_URL","Row","Col","Container","GCOutput","GCInput","constructor","props","refreshList","get","then","res","setState","sequences","data","handleSubmit","e","preventDefault","console","log","state","post","response","alert","catch","error","handleChange","value","target","bind","getOutput","length","componentDidMount","render","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from \"axios\"\nimport { API_URL } from \"./constants/index.js\"\nimport { Row, Col, Container } from 'react-bootstrap';\n\nimport GCOutput from \"./GCOutput\"\n\nclass GCInput extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            value: '',\n            sequences: []\n        };\n        \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    getOutput () {\n        axios.get(API_URL)\n            .then((response) =>  {\n                console.log(response.data[response.data.length-1])\n            })\n    }\n\n    componentDidMount(){\n        this.refreshList()\n    }\n\n    refreshList = () => {\n        axios.get(API_URL)\n            .then(res => this.setState({sequences: res.data}))\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        console.log(this.state)\n        axios.post(API_URL, this.state)\n            .then(response => {\n                console.log(response)\n                alert(\"Submitted\")\n                this.refreshList()\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        //axios.get(API_URL)\n        //    .then((response) =>  {\n        //       console.log(response.data)\n        //    })\n\n    }\n\n\n    handleChange = e => {\n        this.setState({ value: e.target.value });\n    }\n\n    render() {\n        return (\n            <div>\n                <p> Please enter your input DNA sequence (an array of A, T, G and C)</p>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <textarea\n                            type=\"text\" \n                            name=\"value\"\n                            style={{width:'350px', height:'250px'}}\n                            placeholder=\"DNA sequence comprising of A, T, G and C\"\n                            value={this.state.value}\n                            onChange={this.handleChange} \n                            rows=\"3\"\n                        />\n                        <p><button type =\"submit\">Submit</button></p>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nexport default GCInput"]},"metadata":{},"sourceType":"module"}