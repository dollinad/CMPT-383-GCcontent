{"ast":null,"code":"var _jsxFileName = \"/Users/dollina/Desktop/Project/bioinfojs/src/GCOutput.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { API_URL } from \"./constants/index.js\";\nimport GCInput from \"./GCInput\";\nimport { render } from '@testing-library/react';\nimport { Row, Container } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\n\nclass GCOutput extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sequences: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(API_URL).then(res => {\n      this.setState({\n        sequences: res.data\n      });\n      console.log(\"COMING\", res.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, this.state.sequences.length > 0 && this.state.sequences.map(value => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: value.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }\n      }, \"A: \", /*#__PURE__*/React.createElement(\"textarea\", {\n        value: value.a,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      }, \"C: \", /*#__PURE__*/React.createElement(\"textarea\", {\n        value: value.c,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }\n      }, \"G: \", /*#__PURE__*/React.createElement(\"textarea\", {\n        value: value.g,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 33\n        }\n      }, \"T: \", /*#__PURE__*/React.createElement(\"textarea\", {\n        value: value.t,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }\n      }, \"GC: \", /*#__PURE__*/React.createElement(\"textarea\", {\n        value: value.gc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 42\n        }\n      })));\n    }));\n  }\n\n}\n\nexport default GCOutput;","map":{"version":3,"sources":["/Users/dollina/Desktop/Project/bioinfojs/src/GCOutput.js"],"names":["React","Component","axios","API_URL","GCInput","render","Row","Container","Col","GCOutput","state","sequences","componentDidMount","get","then","res","setState","data","console","log","length","map","value","id","a","c","g","t","gc"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAGA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,iBAA/B;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACC,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCS,KADmC,GAC3B;AACJC,MAAAA,SAAS,EAAE;AADP,KAD2B;AAAA;;AAKnCC,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,KAAK,CAACW,GAAN,CAAUV,OAAV,EACKW,IADL,CACUC,GAAG,IAAI;AAAC,WAAKC,QAAL,CAAc;AAACL,QAAAA,SAAS,EAAEI,GAAG,CAACE;AAAhB,OAAd;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,GAAG,CAACE,IAA1B;AACH,KAHD;AAKH;;AAEDZ,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKK,KAAL,CAAWC,SAAX,CAAqBS,MAArB,GAA8B,CAA9B,IACG,KAAKV,KAAL,CAAWC,SAAX,CAAqBU,GAArB,CAA0BC,KAAD,IAAU;AAC/B,0BACI;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAQ;AAAU,QAAA,KAAK,EAAED,KAAK,CAACE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR,CADJ,eAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAQ;AAAU,QAAA,KAAK,EAAEF,KAAK,CAACG,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR,CAFJ,eAGI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAQ;AAAU,QAAA,KAAK,EAAEH,KAAK,CAACI,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR,CAHJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAQ;AAAU,QAAA,KAAK,EAAEJ,KAAK,CAACK,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR,CAJJ,eAKI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAS;AAAU,QAAA,KAAK,EAAEL,KAAK,CAACM,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT,CALJ,CADJ;AASH,KAVD,CAFR,CADJ;AAkBH;;AAhCkC;;AAqCvC,eAAenB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from \"axios\"\nimport { API_URL } from \"./constants/index.js\"\n\n\nimport GCInput from \"./GCInput\"\nimport { render } from '@testing-library/react'\nimport { Row, Container } from 'react-bootstrap'\nimport { Col } from 'react-bootstrap'\n\nclass GCOutput extends React.Component {\n    state = {\n        sequences: []\n    };\n\n    componentDidMount() {\n        axios.get(API_URL)\n            .then(res => {this.setState({sequences: res.data})\n            console.log(\"COMING\", res.data)\n        })\n        \n    }\n\n    render() {\n        return (\n            <Row>\n                {this.state.sequences.length > 0 &&\n                    this.state.sequences.map((value)=> {\n                        return (\n                            <div key={value.id}>\n                                <Col>A: <textarea value={value.a}/></Col>\n                                <Col>C: <textarea value={value.c}/></Col>\n                                <Col>G: <textarea value={value.g}/></Col>\n                                <Col>T: <textarea value={value.t}/></Col>\n                                <Col>GC: <textarea value={value.gc}/></Col>\n                            </div>\n                        )\n                    })}\n                \n            </Row>\n        )\n\n    }\n}\n        \n\n\nexport default GCOutput;"]},"metadata":{},"sourceType":"module"}