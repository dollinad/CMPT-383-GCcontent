{"ast":null,"code":"var _jsxFileName = \"/Users/dollina/Desktop/Project/bioinfojs/src/App.js\";\nimport React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport video from './videos/dna5.gif';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport GCInput from './GCInput';\nimport GCOutput from './GCOutput';\nimport './App.css';\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, \"Bioinformatics Learning Tools\", /*#__PURE__*/React.createElement(\"img\", {\n    src: video,\n    alt: \"gif\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Tabs, {\n    defaultActiveKey: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"Description\",\n    title: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"App-Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), \" This website aims to aid the understanding of fundamental concepts in Bioinformatics. Some topics covered are: \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 48\n    }\n  }), \" Calculation of CG content in a given sequence \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 100\n    }\n  }), \" Transcription.\")), /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"GC Content\",\n    title: \"GC Content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), \" The GC content in a genome is expressed as the propotion of guanine and cytosine bases in the DNA sequence. That is, it is the sum of guanine bases and cytosine bases divided by the total number of bases in the sequence. This calculation does not only have deep ecological revelance but is also one of the major factors that help in detcetion of mutations in the sequence.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 94\n    }\n  })), /*#__PURE__*/React.createElement(GCInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Tab, {\n    eventKey: \"Transcription\",\n    title: \"Transcription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), \" Future work\"))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dollina/Desktop/Project/bioinfojs/src/App.js"],"names":["React","Jumbotron","video","Tabs","Tab","GCInput","GCOutput","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDACI;AAAK,IAAA,GAAG,EAAEL,KAAV;AAAiB,IAAA,GAAG,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,gBAAgB,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,aAAd;AAA4B,IAAA,KAAK,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mIAEiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjC,kEAEqF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrF,oBADF,CADF,eAOE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,YAAd;AAA2B,IAAA,KAAK,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,wYAG+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH/E,CADF,eAME,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAPF,eAeE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,eAAd;AAA8B,IAAA,KAAK,EAAC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,iBADF,CAfF,CAJF,CADF,CADF,CADF;AAgCD;;AAED,eAAeK,GAAf","sourcesContent":["import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport video from './videos/dna5.gif'\nimport { Tabs, Tab } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport GCInput from './GCInput'\nimport GCOutput from './GCOutput'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Jumbotron>\n          <h1>Bioinformatics Learning Tools \n              <img src={video} alt=\"gif\"/>\n          </h1>\n          <Tabs defaultActiveKey=\"Description\">\n            <Tab eventKey=\"Description\" title=\"Description\">\n              <p className=\"App-Description\"> \n                <br/> This website aims to aid the understanding of fundamental concepts in Bioinformatics.\n                      Some topics covered are: <br/> Calculation of CG content in a given sequence <br/> Transcription.\n              </p>\n            </Tab>\n            <Tab eventKey=\"GC Content\" title=\"GC Content\">\n              <p>\n                <br/> The GC content in a genome is expressed as the propotion of guanine and cytosine bases in the DNA sequence. That is, it is the sum of guanine bases and cytosine bases \n                divided by the total number of bases in the sequence. This calculation does not only have deep ecological revelance but is also \n                one of the major factors that help in detcetion of mutations in the sequence.<br/>\n              </p>\n              <GCInput/>\n            </Tab>\n            <Tab eventKey=\"Transcription\" title=\"Transcription\">\n              <p>\n                <br/> Future work\n              </p>\n            </Tab>\n          </Tabs>\n        </Jumbotron>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}